-- Tạo database
CREATE DATABASE IF NOT EXISTS medical_family_db
CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE medical_family_db;

-- Bảng user
CREATE TABLE IF NOT EXISTS `user` (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) NOT NULL UNIQUE,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    phone VARCHAR(20) NOT NULL,
    address TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    role ENUM('user', 'doctor', 'admin') NOT NULL DEFAULT 'user',
    is_active BOOLEAN DEFAULT TRUE
) ENGINE=InnoDB;

CREATE INDEX idx_username ON `user`(username);
CREATE INDEX idx_email ON `user`(email);

-- Bảng doctor
CREATE TABLE IF NOT EXISTS doctor (
    doctor_id INT AUTO_INCREMENT PRIMARY KEY,
    full_name VARCHAR(100) NOT NULL,
    specialty VARCHAR(100) NOT NULL,
    clinic_name VARCHAR(100),
    email VARCHAR(255) NOT NULL UNIQUE,
    phone VARCHAR(20) NOT NULL,
    license_number VARCHAR(50) UNIQUE,
    is_active BOOLEAN DEFAULT TRUE
) ENGINE=InnoDB;

CREATE INDEX idx_email_doctor ON doctor(email);
CREATE INDEX idx_license ON doctor(license_number);

-- Bảng patient
CREATE TABLE IF NOT EXISTS patient (
    patient_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    full_name VARCHAR(100) NOT NULL,
    date_of_birth DATE NOT NULL,
    gender ENUM('male', 'female', 'other') NOT NULL,
    blood_type VARCHAR(5),
    emergency_contact VARCHAR(20),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_patient_user FOREIGN KEY (user_id)
        REFERENCES `user`(user_id)
        ON DELETE CASCADE
) ENGINE=InnoDB;

CREATE INDEX idx_user_id ON patient(user_id);

-- Bảng medical_record
CREATE TABLE IF NOT EXISTS medical_record (
    record_id INT AUTO_INCREMENT PRIMARY KEY,
    patient_id INT NOT NULL,
    diagnosis TEXT,
    treatment TEXT,
    medications TEXT,
    allergies TEXT,
    notes TEXT,
    record_date DATE NOT NULL,
    doctor_name VARCHAR(100),
    CONSTRAINT FK_medical_record_patient FOREIGN KEY (patient_id)
        REFERENCES patient(patient_id)
        ON DELETE CASCADE
) ENGINE=InnoDB;

CREATE INDEX idx_patient_id ON medical_record(patient_id);
CREATE INDEX idx_record_date ON medical_record(record_date);

-- Bảng transfer
CREATE TABLE IF NOT EXISTS transfer (
    transfer_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    patient_id INT NOT NULL,
    doctor_id INT NOT NULL,
    record_ids TEXT,
    access_type ENUM('view', 'edit') NOT NULL DEFAULT 'view',
    expires_at DATETIME,
    status ENUM('pending', 'approved', 'revoked') NOT NULL DEFAULT 'pending',
    transferred_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_transfer_user FOREIGN KEY (user_id)
        REFERENCES `user`(user_id)
        ON DELETE CASCADE,
    CONSTRAINT FK_transfer_patient FOREIGN KEY (patient_id)
        REFERENCES patient(patient_id)
        ON DELETE CASCADE,
    CONSTRAINT FK_transfer_doctor FOREIGN KEY (doctor_id)
        REFERENCES doctor(doctor_id)
        ON DELETE CASCADE
) ENGINE=InnoDB;

CREATE INDEX idx_user_id_transfer ON transfer(user_id);
CREATE INDEX idx_patient_id_transfer ON transfer(patient_id);
CREATE INDEX idx_doctor_id_transfer ON transfer(doctor_id);
CREATE INDEX idx_status ON transfer(status);
CREATE INDEX idx_expires_at ON transfer(expires_at);

-- Bảng appointment
CREATE TABLE IF NOT EXISTS appointment (
    appointment_id INT AUTO_INCREMENT PRIMARY KEY,
    patient_id INT NOT NULL,
    doctor_id INT NOT NULL,
    transfer_id INT,
    appointment_date DATETIME NOT NULL,
    status ENUM('scheduled', 'completed', 'cancelled') NOT NULL DEFAULT 'scheduled',
    notes TEXT,
    CONSTRAINT FK_appointment_patient FOREIGN KEY (patient_id)
        REFERENCES patient(patient_id)
        ON DELETE CASCADE,
    CONSTRAINT FK_appointment_doctor FOREIGN KEY (doctor_id)
        REFERENCES doctor(doctor_id)
        ON DELETE CASCADE,
    CONSTRAINT FK_appointment_transfer FOREIGN KEY (transfer_id)
        REFERENCES transfer(transfer_id)
        ON DELETE SET NULL
) ENGINE=InnoDB;

CREATE INDEX idx_patient_id_appointment ON appointment(patient_id);
CREATE INDEX idx_doctor_id_appointment ON appointment(doctor_id);
CREATE INDEX idx_appointment_date ON appointment(appointment_date);
CREATE INDEX idx_status_appointment ON appointment(status);

-- Bảng audit_log
CREATE TABLE IF NOT EXISTS audit_log (
    log_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    action VARCHAR(50) NOT NULL,
    details TEXT,
    ip_address VARCHAR(45),
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_audit_log_user FOREIGN KEY (user_id)
        REFERENCES `user`(user_id)
        ON DELETE SET NULL
) ENGINE=InnoDB;

CREATE INDEX idx_user_id_audit ON audit_log(user_id);
CREATE INDEX idx_action ON audit_log(action);
CREATE INDEX idx_created_at ON audit_log(created_at);

-- Kiểm tra các bảng đã tạo
SHOW TABLES;
